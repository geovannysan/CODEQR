// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NEWCODES.Infraestructura;

#nullable disable

namespace NEWCODES.Migrations
{
    [DbContext(typeof(EevntoContext))]
    [Migration("20250424145450_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Entity.Codigos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EventoID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Precio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("info")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventoID");

                    b.ToTable("Codigos");
                });

            modelBuilder.Entity("Entity.DispositivoLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DispoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocalidadID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DispoId");

                    b.HasIndex("LocalidadID");

                    b.ToTable("DispositivoLocation");
                });

            modelBuilder.Entity("Entity.Dispositivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EventoID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IDequipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventoID");

                    b.ToTable("Dispositivos");
                });

            modelBuilder.Entity("Entity.Eventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SelecionLocation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Entity.Localidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Count")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdEvento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdEvento");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("NEWCODES.Domain.Entity.LogsEventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdEvento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdEvento");

                    b.ToTable("LogsEventos");
                });

            modelBuilder.Entity("Entity.Codigos", b =>
                {
                    b.HasOne("Entity.Eventos", "Eventos")
                        .WithMany()
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("Entity.DispositivoLocation", b =>
                {
                    b.HasOne("Entity.Dispositivos", "Dispositivos")
                        .WithMany()
                        .HasForeignKey("DispoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Localidades", "Localidades")
                        .WithMany()
                        .HasForeignKey("LocalidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispositivos");

                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("Entity.Dispositivos", b =>
                {
                    b.HasOne("Entity.Eventos", "Eventos")
                        .WithMany()
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("Entity.Localidades", b =>
                {
                    b.HasOne("Entity.Eventos", "Eventos")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("NEWCODES.Domain.Entity.LogsEventos", b =>
                {
                    b.HasOne("Entity.Eventos", "Eventos")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
